{"version":3,"sources":["pages/Seller/ProductManagement/AddNewProduct/ProductInformation.js","pages/Seller/ProductManagement/AddNewProduct/ProductVariation.js","pages/Seller/ProductManagement/AddNewProduct/ProductImage.js","pages/Seller/ProductManagement/AddNewProduct/AddNewProduct.js"],"names":["ProductInformation","Option","Select","TextArea","Input","react_default","a","createElement","Fragment","form_form","Item","name","label","es_select","defaultValue","style","width","value","row","justify","col","md","xs","input","suffix","tooltip","title","placement","arrowPointAtCenter","InfoCircleOutlined","color","input_number","formatter","concat","replace","parser","paddingBottom","showCount","maxLength","autoSize","minRows","maxRows","Component","ProductVariation","state","hasProdVar","varOptCount","handleHasProdVarChange","_this","setState","prev","_this$state","this","es_switch","checked","checkedChildren","unCheckedChildren","onChange","divider","es_form","es_input","disabled","List","fields","_ref","add","remove","map","field","space","key","display","align","className","Object","assign","marginBottom","fieldKey","rules","required","message","MinusCircleOutlined","onClick","es_button","type","block","icon","PlusCircleOutlined","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","hasProdImg","previewVisible","previewImage","previewTitle","coverPhotoFileList","otherImgFileList","handleCoverPhotoChange","fileList","handleOtherImgChange","_ref2","handleCancel","handlePreview","_callee","regenerator_default","wrap","_context","next","url","preview","originFileObj","sent","substring","lastIndexOf","stop","handleHasProdImgChange","isJpgOrPng","console","isLt2M","size","upload","beforeUpload","listType","onPreview","length","modal","visible","footer","onCancel","alt","src","antd_img_crop_esm","quality","modalWidth","rotate","AddNewProduct","isLoading","stepForm","currentStep","currentSectionTitle","handleStepChange","onFinish","formData","log","_this2","validationSchema","Yup","prodCat","prodCode","prodName","sellPrice","prodDesc","layout","Content","padding","margin","spin","spinning","steps","responsive","current","Step","status","formik_esm","initialValues","coverPhoto","otherImg","prodVarName","prodVarOpt","onSubmit","card","bordered","textAlign","shape","LeftOutlined","marginRight","RightOutlined","marginLeft","AddNewProduct_ProductInformation","AddNewProduct_ProductVariation","ProductImage","submit_button"],"mappings":"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","file":"static/js/4.fc75da28.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Tooltip, Row, Col, Divider } from 'antd';\r\nimport { Form, Select, Input, InputNumber } from 'formik-antd';\r\nimport { InfoCircleOutlined } from '@ant-design/icons';\r\n\r\nclass ProductInformation extends Component {\r\n  render() {\r\n    const { Option } = Select;\r\n    const { TextArea } = Input;\r\n\r\n    return (\r\n      <>\r\n        <Form.Item name='prodCat' label='Category'>\r\n          <Select name='prodCat' defaultValue='' style={{ width: '100%' }}>\r\n            <Option value=''>- Select category -</Option>\r\n            <Option value='CAT_A'>Category A</Option>\r\n            <Option value='MERCH_CAT'>Merchandise Category</Option>\r\n            <Option value='ANOTHER_CAT'>Another Category Here</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        <Row justify='space-between'>\r\n          <Col md={14} xs={24}>\r\n            <Form.Item name='prodName' label='Product Name'>\r\n              <Input name='prodName' />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col md={9} xs={24}>\r\n            <Form.Item name='prodCode' label='Product Code'>\r\n              <Input\r\n                name='prodCode'\r\n                suffix={\r\n                  <Tooltip title='The unique code between products such as SKU' placement='topRight' arrowPointAtCenter={true}>\r\n                    <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                  </Tooltip>\r\n                }\r\n              />\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Form.Item name='sellPrice' label='Selling Price'>\r\n          <InputNumber\r\n            name='sellPrice'\r\n            style={{ width: '100%' }}\r\n            defaultValue={1000}\r\n            formatter={(value) => `RM ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\r\n            parser={(value) => value.replace(/RM\\s?|(,*)/g, '')}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item name='prodDesc' label='Product Description' style={{ paddingBottom: 24 }}>\r\n          <TextArea name='prodDesc' showCount maxLength={300} autoSize={{ minRows: 3, maxRows: 12 }} />\r\n        </Form.Item>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductInformation;\r\n","import React, { Component } from 'react';\r\nimport { Row, Col, Input, Form, Space, Button, Switch, Divider } from 'antd';\r\nimport { MinusCircleOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\n\r\nclass ProductVariation extends Component {\r\n  state = {\r\n    hasProdVar: true,\r\n    varOptCount: 2,\r\n  };\r\n\r\n  handleHasProdVarChange = () => {\r\n    this.setState((prev) => ({\r\n      hasProdVar: !prev.hasProdVar,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { hasProdVar, varOptCount } = this.state;\r\n    return (\r\n      <>\r\n        <h3>\r\n          Product Variation <Switch checked={hasProdVar} checkedChildren='ON' unCheckedChildren='OFF' onChange={this.handleHasProdVarChange} />\r\n        </h3>\r\n        <Divider />\r\n        <Row justify='space-between'>\r\n          <Col md={10} xs={24}>\r\n            <Form.Item name='prodVarName' label='Variation Name'>\r\n              <Input name='prodVarName' disabled={!hasProdVar} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col md={13} xs={24}>\r\n            <Form.Item name='prodVarOpt' label='Options'>\r\n              <Form.List name='prodVarOpt'>\r\n                {(fields, { add, remove }) => (\r\n                  <>\r\n                    {fields.map((field) => (\r\n                      <Space key={field.key} style={{ display: 'flex' }} align='baseline' className='odr-mgr'>\r\n                        <Form.Item\r\n                          {...field}\r\n                          style={{ marginBottom: 12 }}\r\n                          name={[field.name, 'prodVarOpt']}\r\n                          fieldKey={[field.fieldKey, 'prodVarOpt']}\r\n                          rules={[{ required: true, message: 'Missing first name' }]}\r\n                        >\r\n                          <Input disabled={!hasProdVar} />\r\n                        </Form.Item>\r\n                        <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                      </Space>\r\n                    ))}\r\n                    <Form.Item>\r\n                      <Button type='dashed' onClick={() => add()} block icon={<PlusCircleOutlined />} disabled={!hasProdVar}>\r\n                        Add Options (2/10)\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </>\r\n                )}\r\n              </Form.List>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductVariation;\r\n","import React, { Component } from 'react';\r\nimport { Upload, Modal, Form, Switch, Divider } from 'antd';\r\nimport ImgCrop from 'antd-img-crop';\r\nimport { PlusCircleOutlined } from '@ant-design/icons';\r\n\r\nfunction getBase64(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n}\r\n\r\nclass ProductInformation extends Component {\r\n  state = {\r\n    hasProdImg: true,\r\n    previewVisible: false,\r\n    previewImage: '',\r\n    previewTitle: '',\r\n    coverPhotoFileList: [],\r\n    otherImgFileList: [],\r\n  };\r\n\r\n  beforeUpload(file) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      console.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      console.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\n  handleCoverPhotoChange = ({ fileList }) => this.setState({ coverPhotoFileList: fileList });\r\n\r\n  handleOtherImgChange = ({ fileList }) => this.setState({ otherImgFileList: fileList });\r\n\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = async (file) => {\r\n    if (!file.url && !file.preview) {\r\n      file.preview = await getBase64(file.originFileObj);\r\n    }\r\n\r\n    this.setState({\r\n      previewImage: file.url || file.preview,\r\n      previewVisible: true,\r\n      previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n    });\r\n  };\r\n\r\n  handleHasProdImgChange = () => {\r\n    this.setState((prev) => ({\r\n      hasProdImg: !prev.hasProdImg,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { hasProdImg, previewVisible, previewTitle, previewImage, coverPhotoFileList, otherImgFileList } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Switch checked={hasProdImg} checkedChildren='ON' unCheckedChildren='OFF' onChange={this.handleHasProdImgChange} />\r\n\r\n        <Form.Item name='coverPhoto' label='Cover Photo'>\r\n          <Upload\r\n            name='coverPhoto'\r\n            beforeUpload={() => false}\r\n            listType='picture-card'\r\n            onPreview={this.handlePreview}\r\n            onChange={this.handleCoverPhotoChange}\r\n            fileList={coverPhotoFileList}\r\n            disabled={!hasProdImg}\r\n          >\r\n            {coverPhotoFileList.length < 1 && <PlusCircleOutlined />}\r\n          </Upload>\r\n          <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={this.handleCancel}>\r\n            <img alt='' style={{ width: '100%' }} src={previewImage} />\r\n          </Modal>\r\n        </Form.Item>\r\n        <Form.Item name='otherImg' label='Other Images (max 10)'>\r\n          <ImgCrop quality={1} modalWidth={600} rotate={true}>\r\n            <Upload\r\n              name='otherImg'\r\n              beforeUpload={() => true}\r\n              listType='picture-card'\r\n              onPreview={this.handlePreview}\r\n              onChange={this.handleOtherImgChange}\r\n              fileList={otherImgFileList}\r\n              disabled={!hasProdImg}\r\n            >\r\n              {otherImgFileList.length < 10 && <PlusCircleOutlined />}\r\n            </Upload>\r\n          </ImgCrop>\r\n          <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={this.handleCancel}>\r\n            <img alt='' style={{ width: '100%' }} src={previewImage} />\r\n          </Modal>\r\n        </Form.Item>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductInformation;\r\n","import React, { Component } from 'react';\r\nimport { Layout, Steps, Button, Card, Spin, Divider, Row, Tooltip } from 'antd';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { LeftOutlined, RightOutlined } from '@ant-design/icons';\r\nimport ProductInformation from './ProductInformation';\r\nimport ProductVariation from './ProductVariation';\r\nimport ProductImage from './ProductImage';\r\n\r\nclass AddNewProduct extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    stepForm: [],\r\n    currentStep: 0,\r\n    currentSectionTitle: 'Product Information',\r\n  };\r\n\r\n  handleStepChange = (currentStep) => {\r\n    this.setState({ currentStep }, () => {\r\n      if (currentStep === 0) {\r\n        this.setState({ currentSectionTitle: 'Product Information' });\r\n      } else if (currentStep === 1) {\r\n        this.setState({ currentSectionTitle: 'Product Variation' });\r\n      } else if (currentStep === 2) {\r\n        this.setState({ currentSectionTitle: 'Product Image' });\r\n      } else {\r\n        // 3\r\n        this.setState({ currentSectionTitle: 'Product Stock' });\r\n      }\r\n    });\r\n  };\r\n\r\n  onFinish = (formData) => {\r\n    // POST the data to backend and show Notification\r\n    console.log(formData);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    // const ProductInformation = React.lazy(() => import('./ProductInformation'));\r\n    // const ProductVariation = React.lazy(() => import('./ProductVariation'));\r\n    // const ProductImage = React.lazy(() => import('./ProductImage'));\r\n    const { currentStep, currentSectionTitle } = this.state;\r\n\r\n    // Form initial value\r\n    const initialValues = {\r\n      prodCat: '',\r\n      prodCode: '',\r\n      prodName: '',\r\n      sellPrice: '',\r\n      prodDesc: '',\r\n      coverPhoto: '',\r\n      otherImg: [],\r\n      prodVarName: '',\r\n      prodVarOpt: [],\r\n    };\r\n\r\n    //Form schema to be validated\r\n    const validationSchema = Yup.object({\r\n      prodCat: Yup.string().required('Product category is required'),\r\n      prodCode: Yup.string(),\r\n      prodName: Yup.string().required('Product name is required'),\r\n      sellPrice: Yup.string().required('Selling price  is required'),\r\n      prodDesc: Yup.string().required('Product description  is required'),\r\n    });\r\n\r\n    return (\r\n      <Layout.Content className='layout-background' style={{ padding: 24, margin: 0 }}>\r\n        <Spin spinning={this.state.isLoading}>\r\n          <div style={{ padding: '12px 24px 0' }}>\r\n            <Steps responsive='true' size='small' current={currentStep} onChange={this.handleStepChange} className='odr-mgr'>\r\n              <Steps.Step status='finish' title={<Tooltip title='Product Information'>Info</Tooltip>} />\r\n              <Steps.Step status='process' title={<Tooltip title='Product Variation'>Variation</Tooltip>} />\r\n              <Steps.Step status='wait' title={<Tooltip title='Product Images'>Images</Tooltip>} />\r\n              <Steps.Step status='wait' title={<Tooltip title='Product Stock'>Stock</Tooltip>} />\r\n            </Steps>\r\n          </div>\r\n          <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={console.log}>\r\n            <Form layout='vertical' className='odr-mgr'>\r\n              <Card bordered={false}>\r\n                <Row justify='space-between'>\r\n                  <div style={{ textAlign: 'left' }}>\r\n                    <h3>{currentSectionTitle}</h3>\r\n                  </div>\r\n                  <div style={{ textAlign: 'right' }}>\r\n                    {currentStep !== 0 && (\r\n                      <Tooltip title='Back'>\r\n                        <Button shape='circle' icon={<LeftOutlined />} style={{ marginRight: '8px' }} onClick={() => this.handleStepChange(currentStep - 1)} />\r\n                      </Tooltip>\r\n                    )}\r\n                    {currentStep !== 3 && (\r\n                      <Tooltip title='Next'>\r\n                        <Button shape='circle' icon={<RightOutlined />} style={{ marginLeft: '8px' }} onClick={() => this.handleStepChange(currentStep + 1)} />\r\n                      </Tooltip>\r\n                    )}\r\n                  </div>\r\n                </Row>\r\n\r\n                <Divider style={{ margin: '12px 0' }} />\r\n                {currentStep === 0 && <ProductInformation />}\r\n                {currentStep === 1 && <ProductVariation />}\r\n                {currentStep === 2 && <ProductImage />}\r\n                <Divider />\r\n                <div style={{ textAlign: 'right' }}>\r\n                  <Button style={{ marginRight: '5px' }}>Save As Draft</Button>\r\n                  <SubmitButton disabled={false}>Publish Now</SubmitButton>\r\n                </div>\r\n              </Card>\r\n            </Form>\r\n          </Formik>\r\n        </Spin>\r\n      </Layout.Content>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddNewProduct;\r\n"],"sourceRoot":""}